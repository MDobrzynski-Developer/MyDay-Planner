// App MyDay Planner by Marcin Dobrzyński
const inputs=document.querySelectorAll(".input");function addFocusClass(){this.parentNode.parentNode.classList.add("focus")}function removeFocusClass(){const t=this.parentNode.parentNode;""===this.value&&t.classList.remove("focus")}inputs.forEach((t=>{t.addEventListener("focus",addFocusClass),t.addEventListener("blur",removeFocusClass)}));const messageFeedback=document.querySelectorAll(".message-feedback"),todoAddButton=document.querySelector(".js-add-todo"),todoListDownloadButton=document.querySelector(".js-todo-list-download"),todoListPrint=document.querySelector(".js-todo-list-print");let todoList=JSON.parse(localStorage.getItem("todoList"))||[{taskName:"Testowa nazwa",taskDescription:"Testowy opis",taskDueDate:"31.07.2023 18:40"}];function sortTodoListByDate(t){t.sort(((t,e)=>new Date(t.taskDueDate.substr(6,4),t.taskDueDate.substr(3,2)-1,t.taskDueDate.substr(0,2),t.taskDueDate.substr(11,2),t.taskDueDate.substr(14,2))-new Date(e.taskDueDate.substr(6,4),e.taskDueDate.substr(3,2)-1,e.taskDueDate.substr(0,2),e.taskDueDate.substr(11,2),e.taskDueDate.substr(14,2))))}function formatDatetime(t){const e=new Date(t);return`${e.getDate().toString().padStart(2,"0")}.${(e.getMonth()+1).toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}`}function validateInput(t,e,o){return""===t.trim()?(messageFeedback[e].textContent=o,!1):(messageFeedback[e].textContent="",!0)}function handleAddTodo(){const t=document.querySelector(".js-task-name"),e=document.querySelector(".js-task-description"),o=document.querySelector(".js-task-due-date"),a=t.value.trim(),s=e.value.trim();let n=o.value.trim(),d=!0;d=validateInput(a,0,"Wprowadź nazwę zadania.")&&d,d=validateInput(s,1,"Wprowadź opis zadania.")&&d,d=validateInput(n,2,"Wprowadź termin wykonania zadania.")&&d,d&&(n=formatDatetime(o.value.trim()),todoList.push({taskName:a,taskDescription:s,taskDueDate:n}),t.value="",e.value="",o.value="",localStorage.setItem("todoList",JSON.stringify(todoList)),sortTodoListByDate(todoList),renderTodoList(),inputs.forEach((t=>{t.parentNode.parentNode.classList.remove("focus")})))}function renderTodoList(){const t=document.querySelector(".js-tasks-list");let e="";todoList.forEach(((t,o)=>{const{taskName:a,taskDescription:s,taskDueDate:n}=t;e+=`\n\t\t\t<tr>\n\t\t\t\t<td>${a}</td>\n\t\t\t\t<td>${s}</td>\n\t\t\t\t<td>${n}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button class="js-delete-task author-button color-dark slide-bottom ripple" data-mdb-ripple-color="light" data-task-index="${o}">Usuń zadanie</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t`})),t.innerHTML=e,setupDeleteHandlers()}function setupDeleteHandlers(){document.querySelectorAll(".js-delete-task").forEach((t=>{t.removeEventListener("click",handleDeleteTask),t.addEventListener("click",handleDeleteTask)}))}function handleDeleteTask(){const t=this.dataset.taskIndex;todoList.splice(t,1),localStorage.setItem("todoList",JSON.stringify(todoList)),sortTodoListByDate(todoList),renderTodoList()}function downloadArrayAsText(t,e){if(0===t.length)messageFeedback[3].textContent="Zanim pobierzesz plik, upewnij się, że masz stworzone odpowiednie aktywności na swój harmonogram.";else{const o=t.map(((t,e)=>`Zadanie ${e+1}\n- Nazwa: ${t.taskName}\n- Opis: ${t.taskDescription}\n- Termin: ${t.taskDueDate}\n\n`)).join(""),a=new Blob([o],{type:"text/plain"}),s=document.createElement("a");s.href=URL.createObjectURL(a),s.download=e,s.style.display="none",document.body.appendChild(s),s.click(),document.body.removeChild(s)}}sortTodoListByDate(todoList),renderTodoList(),todoAddButton.addEventListener("click",handleAddTodo),todoListDownloadButton.addEventListener("click",(()=>{downloadArrayAsText(todoList,"todo-list.txt")})),todoListPrint.addEventListener("click",(()=>{window.print()}));